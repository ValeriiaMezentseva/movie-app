{"version":3,"file":"static/js/100.1a3f8c17.chunk.js","mappings":"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","sources":["components/BackLink/BackLink.styled.jsx","components/BackLink/BackLink.jsx","components/Videos/Video.styled.jsx","components/Videos/Video.jsx","pages/MovieInfo/MovieInfo.styled.jsx","services/api.js"],"sourcesContent":["import styled from \"@emotion/styled\";\nimport { Link } from \"react-router-dom\";\n\nexport const StyledLink = styled(Link)`\ndisplay: inline-flex;\nalign-items: center;\ngap: 4px;\npadding: 8px 0;\ncolor: ${props => props.theme.colors.primaryDarkText};\ntext-decoration: none;\nfont-weight: 500;\ntext-transform: uppercase;\n:hover {\n    color: ${props => props.theme.colors.redColor};\n  }\n`;\n","import { HiArrowLeft } from \"react-icons/hi\";\nimport { StyledLink } from \"./BackLink.styled\";\nimport PropTypes from 'prop-types'\n\n\nexport const BackLink = ({ to, children }) => {\n  return (\n    <StyledLink to={to}>\n      <HiArrowLeft size=\"24\" />\n      {children}\n    </StyledLink>\n  );\n};\n\nBackLink.propTypes = {\n  to: PropTypes.object.isRequired,\n   children: PropTypes.oneOfType([\n        PropTypes.arrayOf(PropTypes.node),\n        PropTypes.node\n    ]).isRequired,\n\n}\n","import styled from \"@emotion/styled\";\n\nimport { BsFillPlayBtnFill } from 'react-icons/bs'; \n\n\nexport const Button = styled.button`\ndisplay: block;\npadding: 6px 10px;\nfont-size: 16px;\nfont-weight: 500;\ntext-decoration: none;\ntext-transform: uppercase;\nbackground-color: transparent;\ncolor: ${props => props.theme.colors.primaryDarkText};\ncursor: pointer; \nborder: 2px solid black;\ntransition: color 200ms linear;\n&:hover:not(.active) {\n    color: ${props => props.theme.colors.redColor};\n    border-color: ${props => props.theme.colors.redColor};\n  }\n  \n  &.active {\n  color: ${props => props.theme.colors.redColor};\n    border-color: ${props => props.theme.colors.redColor};\n  }\n\n    &:disabled { \n    pointer-events: none;\n    background-color: ${props => props.theme.colors.primaryLightText};\n    border-color: ${props => props.theme.colors.tertiaryLightText};\n  }\n`;\n\nexport const BtnText = styled.span`\n  padding: 0;\n  display: flex; \n  align-items: center; \n  text-align: center; \n`;\n\nexport const Icon = styled(BsFillPlayBtnFill)`\n  padding: 0; \n  margin: 0; \n  margin-left: 8px; \n`\n\n","import { useState, useEffect } from \"react\";\nimport { getSeriesVideo, getMoviesVideo } from \"services/api\";\nimport { useParams } from \"react-router-dom\";\nimport * as basicLightbox from 'basiclightbox';\nimport 'basiclightbox/dist/basicLightbox.min.css';\nimport { Loader } from \"components/Loader/Loader\";\n\nimport { Button, BtnText, Icon } from \"./Video.styled\";\nimport PropTypes from 'prop-types';\n\nconst Video = () => {\n  const [video, setVideo] = useState(null);\n  const { series_id, movieId } = useParams();\n  const [loading, setLoading] = useState(false);\n  const [isHovered, setIsHovered] = useState(false);\n\n  useEffect(() => {\n    setLoading(true);\n    if (series_id) {\n      getSeriesVideo(series_id)\n        .then(data => setVideo(data))\n        .finally(() => setLoading(false));\n    } else if (movieId) {\n      getMoviesVideo(movieId)\n        .then(data => setVideo(data))\n        .finally(() => setLoading(false));\n    }\n  }, [series_id, movieId]);\n\n  if (!video) {\n    return <>{loading && <Loader />}</>;\n  }\n\n  const filteredVideos = video.filter(video => video.type.toLowerCase() === \"trailer\");\n  const hasTrailers = filteredVideos.length > 0;\n  const disabled = !hasTrailers;\n\n  const openTrailer = (key) => {\n    const lightBox = basicLightbox.create(`\n      <iframe width=\"680\" height=\"415\" src=\"https://www.youtube.com/embed/${key}\" title=\"YouTube video player\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>`);\n    lightBox.show();\n  };\n    \n  const firstVideo = filteredVideos[0];\n\n  const handleButtonClick = () => {\n    if (!disabled) {\n      openTrailer(firstVideo.key);\n    }\n  };\n\n\n\n  return (\n    <div>\n      <Button\n        onClick={handleButtonClick}\n        disabled={disabled}\n        onMouseEnter={() => setIsHovered(hasTrailers && !disabled)}\n        onMouseLeave={() => setIsHovered(false)}\n      >\n        {isHovered ? (\n          <BtnText>\n            Play <Icon />\n          </BtnText>\n        ) : (\n          <BtnText>{disabled ? \"No trailer :(\" : \"Trailer\"}</BtnText>\n        )}\n      </Button>\n    </div>\n  );\n};\n\nVideo.propTypes = {\n  trailer_key: PropTypes.string,\n};\n\nexport default Video;","import styled from \"@emotion/styled\";\nimport { NavLink } from \"react-router-dom\";\n\nexport const Container = styled.main`\nmax-width: 960px;\nmargin: 0 auto;\npadding: 0 16px;\n\n`;\n\nexport const InfoWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  margin-top: 10px;\n  gap: 20px;\n  padding: 10px;\n  border: 10px solid black;\n  border-radius: 10px;\n  box-shadow: 0 14px 28px rgba(0, 0, 0, 0.25), 0 10px 10px rgba(0, 0, 0, 0.22);\n\n  @media screen and (min-width: 640px) {\n    flex-direction: row;\n    align-items: flex-start;\n  }\n\n`;\n\nexport const Image = styled.img`\nwidth: 280px;\n\n  @media screen and (min-width: 456px) {\n    width: 360px;\n    }\n\n   @media screen and (min-width: 640px) {\n    width: 260px; \n    }\n\n      @media screen and (min-width: 700px) {\n    width: 300px;\n\n    }\n`;\n\nexport const MovieDetails = styled.div`\n    display: flex;\n    flex-direction: column;\n    width: 280px; \n\n      @media screen and (min-width: 385px) {\n    width: 320px;\n    align-items: center; \n    }\n\n     @media screen and (min-width: 456px) {\n    width: 400px;\n    \n    }\n\n       @media screen and (min-width: 576px) {\n    width: 510px;\n    }\n\n         @media screen and (min-width: 640px) {\n    width: 280px;\n    margin-left: 20px; \n    }\n\n    @media screen and (min-width: 738px) {\n   width: 360px;\n    margin-left: 0px; \n    }\n      @media screen and (min-width: 800px) {\n   width: 450px;\n   align-items: flex-start; \n  }\n\n         @media screen and (min-width: 880px) {\n   width: 600px;\n  }\n`;\n\nexport const StyledLink = styled(NavLink)`\ndisplay: block;\npadding: 6px 10px;\nfont-size: 16px;\nfont-weight: 500;\ntext-decoration: none;\ntext-transform: uppercase;\ncolor: ${props => props.theme.colors.primaryDarkText};\nborder: 2px solid black;\ntransition: color 200ms linear;\n&:hover:not(.active) {\n    color: ${props => props.theme.colors.redColor};\n    border-color: ${props => props.theme.colors.redColor};\n  }\n  \n  &.active {\n    color: ${props => props.theme.colors.redColor};\n    border-color: ${props => props.theme.colors.redColor};\n  }\n`;\n\nexport const MoreInfoList = styled.ul`\nlist-style: none; \ndisplay: flex;\nmargin-top: 10px; \npadding: 0; \n\n         @media screen and (min-width: 895px) {\n   margin-top: 40px; \n  }\n`\n\nexport const MoreInfoItem = styled.li`\nmargin-right: 20px;\n`;\n\n\nexport const ShortInfo = styled.div`\n  display: flex; \n  align-items: center;\n`; \n\nexport const Title = styled.h2`\ncolor: ${props => props.theme.colors.primaryDarkText};\n`;\n\nexport const InfoItem = styled.span`\npadding: 5px; \nmargin-right: 10px; \ncolor: ${props => props.theme.colors.primaryDarkText};\n  \n`; \n\nexport const OverView = styled.p`\n text-align: justify; \n margin-right: 20px; \n margin-top: 30px; \n margin-bottom: 10px; \n color: ${props => props.theme.colors.primaryDarkText};\n   @media screen and (min-width: 802px) {\n  margin-top: 30px;\n  }\n`; \n\nexport const BottomInfo = styled.div` \nmargin-bottom: 10px;  \nmargin-right: 20px; \ndisplay: flex;\nflex-direction: column;\n\ncolor: ${props => props.theme.colors.primaryDarkText};\n/* \n  @media screen and (min-width: 802px) {\n  margin-top: 10px;\n  margin-right: 140px; \n  } */\n`; \n\nexport const BottomTitleInfo = styled.span`\n  font-weight: 600;\n  margin-bottom: 6px; \n  color: ${props => props.theme.colors.primaryDarkText};\n`;\n\nexport const BottomInfoList = styled.div`\n display: flex;\n \n`; \n\nexport const AddButton = styled.button`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  cursor: pointer;\n  padding: 10px 20px;\n  margin-right: 10px;\n  margin-top: 10px; \n  border-radius: 8px;\n  background-color: black;\n  color: white;\n  font-size: 12px;\n  font-weight: bold;\n  border: none;\n  outline: none;\n  transition: transform 0.2s ease;\n\n  &:hover {\n    transform: scale(1.05);\n    background-color: black;\n  }\n\n  &:active {\n    transform: scale(0.95);\n  }\n\n         @media screen and (min-width: 740px) {\n    font-size: 16px;\n    }\n`;\n\nexport const ButtonsBox = styled.div`\n  display: flex; \n \n`; \n\n","import axios from \"axios\";\n\nconst API_KEY = 'a672ae57e08bb16567badfa77d9e520f'; \n\nexport async function getMovieById(movieId) {\n    const url = `https://api.themoviedb.org/3/movie/${movieId}?api_key=${API_KEY}&language=en-US`;\n      try {\n    const resp = await axios.get(url);\n    return resp.data;\n  } catch (error) {\n    return;\n  }\n};\n\nexport async function getSeriesById(series_id) {\n    const url = `https://api.themoviedb.org/3/tv/${series_id}?api_key=${API_KEY}&language=en-US`;\n      try {\n    const resp = await axios.get(url);\n    return resp.data;\n  } catch (error) {\n    return;\n  }\n};\n\nexport async function getTrendingAll() {\n  const url = `https://api.themoviedb.org/3/trending/all/day?api_key=${API_KEY}`;\n  try {\n    const resp = await axios.get(url);\n    return resp.data.results;\n  } catch (error) {\n    return;\n  }\n}\n\nexport async function getTrendingMovies() {\n    const url = `https://api.themoviedb.org/3/trending/movie/week?api_key=${API_KEY}`;\n    try {\n        const resp = await axios.get(url);\n        return resp.data.results;\n    } catch (error) {\n        return; \n    }   \n};\n\n\nexport async function getTrendingSeries() {\n  const url = `https://api.themoviedb.org/3/trending/tv/week?api_key=${API_KEY}`;\n    try {\n        const resp = await axios.get(url);\n        return resp.data.results;\n    } catch (error) {\n        return; \n    }   \n};\n\n\nexport async function getMovieCast(movieId) {\n     const url = `https://api.themoviedb.org/3/movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`;\n      try {\n    const resp = await axios.get(url);\n    return resp.data.cast;\n  } catch (error) {\n    return;\n  }\n};\n\nexport async function getSeriesCast(series_id) {\n     const url = `https://api.themoviedb.org/3/tv/${series_id}/credits?api_key=${API_KEY}&language=en-US`;\n      try {\n    const resp = await axios.get(url);\n    return resp.data.cast;\n  } catch (error) {\n    return;\n  }\n};\n\nexport async function getMovieReviews(movieId) {\n  try {\n             const url = `https://api.themoviedb.org/3/movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US`;\n    const resp = await axios.get(url);\n    return resp.data.results;\n  } catch (error) {\n    return;\n  }\n};\n\nexport async function getSeriesReviews(series_id) {\n  try {\n    const url = `https://api.themoviedb.org/3/tv/${series_id}/reviews?api_key=${API_KEY}&language=en-US`;\n    const resp = await axios.get(url);\n    return resp.data.results;\n  } catch (error) {\n    return;\n  }\n}; \n\nexport async function getSearchedMovie(query) {\n  try {\n    const url = `https://api.themoviedb.org/3/search/movie?api_key=${API_KEY}&query=${query}&include_adult=false`;\n    const resp = await axios.get(url);\n    return resp.data.results;\n  } catch (error) {\n    return;\n  }\n}\n\nexport async function getSearchedSeries(query) {\n  try {\n    const url = `https://api.themoviedb.org/3/search/tv?api_key=${API_KEY}&query=${query}&include_adult=false`;\n    const resp = await axios.get(url);\n    return resp.data.results;\n  } catch (error) {\n    return;\n  }\n}; \n\nexport async function getSeriesVideo(series_id) {\n  try {\n    const url = `https://api.themoviedb.org/3/tv/${series_id}/videos?api_key=${API_KEY}&language=en-US`;\n    const resp = await axios.get(url);\n    return resp.data.results;\n  } catch (error) {\n    return;\n  }\n}; \n\nexport async function getMoviesVideo(moviesId) {\n  try {\n    const url = `https://api.themoviedb.org/3/movie/${moviesId}/videos?api_key=${API_KEY}&language=en-US`;\n    const resp = await axios.get(url);\n    return resp.data.results;\n  } catch (error) {\n    return;\n  }\n}; \n\nexport async function getTrendingMoviesByGenre(genre) {\n  try {\n    const url = `https://api.themoviedb.org/3/discover/movie?api_key=${API_KEY}&sort_by=popularity.desc&with_genres=${genre}`;\n    const resp = await axios.get(url); \n    return resp.data.results; \n  } catch (error) {\n    return; \n  }\n}; \n\nexport async function addMovieToWatchList(movieId) {\n  try {\n    const url = `https://api.themoviedb.org/3/movie/${movieId}/account_states?api_key=${API_KEY}`;\n    const resp = await axios.post(url); \n    return resp.data.results; \n  } catch (error) {\n    return; \n  }\n}; \n\nexport async function deleteMovieFromWatchList(movieId) {\n  try {\n    const url = `https://api.themoviedb.org/3/movie/${movieId}/account_states?api_key=${API_KEY}`;\n    const resp = await axios.post(url); \n    return resp.data.results; \n  } catch (error) {\n    return; \n  }\n}; "],"names":["StyledLink","styled","Link","props","theme","colors","primaryDarkText","redColor","BackLink","to","children","size","Button","primaryLightText","tertiaryLightText","BtnText","Icon","BsFillPlayBtnFill","useState","video","setVideo","useParams","series_id","movieId","loading","setLoading","isHovered","setIsHovered","useEffect","getSeriesVideo","then","data","finally","getMoviesVideo","Loader","filteredVideos","filter","type","toLowerCase","hasTrailers","length","disabled","firstVideo","onClick","key","basicLightbox","show","onMouseEnter","onMouseLeave","Container","InfoWrapper","Image","MovieDetails","NavLink","MoreInfoList","MoreInfoItem","ShortInfo","Title","InfoItem","OverView","BottomInfo","BottomTitleInfo","BottomInfoList","AddButton","ButtonsBox","API_KEY","getMovieById","url","axios","resp","getSeriesById","getTrendingAll","results","getTrendingMovies","getTrendingSeries","getMovieCast","cast","getSeriesCast","getMovieReviews","getSeriesReviews","getSearchedMovie","query","getSearchedSeries","moviesId","getTrendingMoviesByGenre","genre"],"sourceRoot":""}