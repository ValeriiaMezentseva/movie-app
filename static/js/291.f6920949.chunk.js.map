{"version":3,"file":"static/js/291.f6920949.chunk.js","mappings":"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","sources":["components/MovieReviews/MovieReviews.styled.jsx","components/MovieReviews/MovieReviews.jsx","services/api.js"],"sourcesContent":["import styled from \"@emotion/styled\";\n\nexport const ReviewsList = styled.ul`\nlist-style: none; \npadding: 20px 0;\n`;\n\nexport const ReviewsItem = styled.li`\n  margin-bottom: 24px;\n  padding: 10px;\n  border: 2px solid black; \n  box-shadow: 0 14px 28px rgba(0, 0, 0, 0.25), 0 10px 10px rgba(0, 0, 0, 0.22);\n`;\n\nexport const Author = styled.p`\n  margin-bottom: 8px;\n  color: ${props => props.theme.colors.primaryDarkText};\n\n`;\n\nexport const AuthorTitle = styled.span`\n  font-size: 18px;\n  font-weight: 700;\n  color: ${props => props.theme.colors.primaryDarkText};\n`;\n\nexport const Content = styled.p`\ncolor: ${props => props.theme.colors.primaryDarkText};\n`\n\nexport const NoCast = styled.h2`\n font-size: 24px;\n  font-weight: 700;\n  text-align: center;\n  color: ${props => props.theme.colors.primaryDarkText};\n  text-shadow:\n             1px 10px 5px ${props => props.theme.colors.primaryDarkText},\n             1px 25px 50px ${props => props.theme.colors.primaryDarkText};\n  background-clip: text;\n  -webkit-background-clip: text;\n`;  ","import { useState, useEffect } from \"react\";\nimport PropTypes from 'prop-types';\nimport { useParams } from \"react-router-dom\";\n\nimport { getMovieReviews, getSeriesReviews } from \"services/api\";\n\nimport { Loader } from \"components/Loader/Loader\";\nimport { ReviewsList, ReviewsItem, Author, AuthorTitle, NoCast, Content } from \"./MovieReviews.styled\";\n\n\n\nconst Reviews = () => {\n    const [reviews, setReviews] = useState(null); \n    const { movieId, series_id } = useParams(); \n    const [loading, setLoading] = useState(false); \n\n   useEffect(() => {\n    setLoading(true);\n    if (movieId) {\n      getMovieReviews(movieId)\n        .then(data => setReviews(data))\n        .finally(() => setLoading(false));\n    } else if (series_id) {\n      getSeriesReviews(series_id)\n        .then(data => setReviews(data))\n        .finally(() => setLoading(false));\n    }\n  }, [movieId, series_id]);\n\n  if (!reviews) {\n    return <>{loading && <Loader />}</>;\n  }\n\n  return (\n    <section>\n      {reviews.length === 0 ? (\n         <NoCast>We don't have any reviews for this {movieId ? \"movie\" : \"series\"} â˜¹ </NoCast>\n      ) : (\n        <ReviewsList>\n          {reviews.map(({ id, author, content }) => (\n            <ReviewsItem key={id}>\n              <Author>\n                <AuthorTitle>Author:</AuthorTitle>{' '}\n                {author ? author : 'No information'}\n              </Author>\n              <Content>{content ? content : 'No information'}</Content>\n            </ReviewsItem>\n          ))}\n        </ReviewsList>\n      )}\n    </section>\n  );\n};\n\nReviews.propTypes = {\n  id: PropTypes.number,\n  author: PropTypes.string,\n  content: PropTypes.string,\n};\n\nexport default Reviews;","import axios from \"axios\";\n\nconst API_KEY = 'a672ae57e08bb16567badfa77d9e520f'; \n\nexport async function getMovieById(movieId) {\n    const url = `https://api.themoviedb.org/3/movie/${movieId}?api_key=${API_KEY}&language=en-US`;\n      try {\n    const resp = await axios.get(url);\n    return resp.data;\n  } catch (error) {\n    return;\n  }\n};\n\nexport async function getSeriesById(series_id) {\n    const url = `https://api.themoviedb.org/3/tv/${series_id}?api_key=${API_KEY}&language=en-US`;\n      try {\n    const resp = await axios.get(url);\n    return resp.data;\n  } catch (error) {\n    return;\n  }\n};\n\nexport async function getTrendingAll() {\n  const url = `https://api.themoviedb.org/3/trending/all/day?api_key=${API_KEY}`;\n  try {\n    const resp = await axios.get(url);\n    return resp.data.results;\n  } catch (error) {\n    return;\n  }\n}\n\nexport async function getTrendingMovies() {\n    const url = `https://api.themoviedb.org/3/trending/movie/week?api_key=${API_KEY}`;\n    try {\n        const resp = await axios.get(url);\n        return resp.data.results;\n    } catch (error) {\n        return; \n    }   \n};\n\n\nexport async function getTrendingSeries() {\n  const url = `https://api.themoviedb.org/3/trending/tv/week?api_key=${API_KEY}`;\n    try {\n        const resp = await axios.get(url);\n        return resp.data.results;\n    } catch (error) {\n        return; \n    }   \n};\n\n\nexport async function getMovieCast(movieId) {\n     const url = `https://api.themoviedb.org/3/movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`;\n      try {\n    const resp = await axios.get(url);\n    return resp.data.cast;\n  } catch (error) {\n    return;\n  }\n};\n\nexport async function getSeriesCast(series_id) {\n     const url = `https://api.themoviedb.org/3/tv/${series_id}/credits?api_key=${API_KEY}&language=en-US`;\n      try {\n    const resp = await axios.get(url);\n    return resp.data.cast;\n  } catch (error) {\n    return;\n  }\n};\n\nexport async function getMovieReviews(movieId) {\n  try {\n             const url = `https://api.themoviedb.org/3/movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US`;\n    const resp = await axios.get(url);\n    return resp.data.results;\n  } catch (error) {\n    return;\n  }\n};\n\nexport async function getSeriesReviews(series_id) {\n  try {\n    const url = `https://api.themoviedb.org/3/tv/${series_id}/reviews?api_key=${API_KEY}&language=en-US`;\n    const resp = await axios.get(url);\n    return resp.data.results;\n  } catch (error) {\n    return;\n  }\n}; \n\nexport async function getSearchedMovie(query) {\n  try {\n    const url = `https://api.themoviedb.org/3/search/movie?api_key=${API_KEY}&query=${query}&include_adult=false`;\n    const resp = await axios.get(url);\n    return resp.data.results;\n  } catch (error) {\n    return;\n  }\n}\n\nexport async function getSearchedSeries(query) {\n  try {\n    const url = `https://api.themoviedb.org/3/search/tv?api_key=${API_KEY}&query=${query}&include_adult=false`;\n    const resp = await axios.get(url);\n    return resp.data.results;\n  } catch (error) {\n    return;\n  }\n}; \n\nexport async function getSeriesVideo(series_id) {\n  try {\n    const url = `https://api.themoviedb.org/3/tv/${series_id}/videos?api_key=${API_KEY}&language=en-US`;\n    const resp = await axios.get(url);\n    return resp.data.results;\n  } catch (error) {\n    return;\n  }\n}; \n\nexport async function getMoviesVideo(moviesId) {\n  try {\n    const url = `https://api.themoviedb.org/3/movie/${moviesId}/videos?api_key=${API_KEY}&language=en-US`;\n    const resp = await axios.get(url);\n    return resp.data.results;\n  } catch (error) {\n    return;\n  }\n}; \n\nexport async function getTrendingMoviesByGenre(genre) {\n  try {\n    const url = `https://api.themoviedb.org/3/discover/movie?api_key=${API_KEY}&sort_by=popularity.desc&with_genres=${genre}`;\n    const resp = await axios.get(url); \n    return resp.data.results; \n  } catch (error) {\n    return; \n  }\n}; \n\nexport async function addMovieToWatchList(movieId) {\n  try {\n    const url = `https://api.themoviedb.org/3/movie/${movieId}/account_states?api_key=${API_KEY}`;\n    const resp = await axios.post(url); \n    return resp.data.results; \n  } catch (error) {\n    return; \n  }\n}; \n\nexport async function deleteMovieFromWatchList(movieId) {\n  try {\n    const url = `https://api.themoviedb.org/3/movie/${movieId}/account_states?api_key=${API_KEY}`;\n    const resp = await axios.post(url); \n    return resp.data.results; \n  } catch (error) {\n    return; \n  }\n}; "],"names":["ReviewsList","styled","ReviewsItem","Author","props","theme","colors","primaryDarkText","AuthorTitle","Content","NoCast","useState","reviews","setReviews","useParams","movieId","series_id","loading","setLoading","useEffect","getMovieReviews","then","data","finally","getSeriesReviews","length","map","id","author","content","Loader","API_KEY","getMovieById","url","axios","resp","getSeriesById","getTrendingAll","results","getTrendingMovies","getTrendingSeries","getMovieCast","cast","getSeriesCast","getSearchedMovie","query","getSearchedSeries","getSeriesVideo","getMoviesVideo","moviesId","getTrendingMoviesByGenre","genre"],"sourceRoot":""}