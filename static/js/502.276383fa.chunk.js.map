{"version":3,"file":"static/js/502.276383fa.chunk.js","mappings":"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","sources":["components/MovieCast/MovieCast.styled.jsx","components/MovieCast/MovieCast.jsx","services/api.js"],"sourcesContent":["import styled from \"@emotion/styled\";\n\nexport const CastList = styled.ul`\nlist-style: none; \n  display: flex;\n  justify-content: center;\n  flex-wrap: wrap;\n  gap: 12px;\n  padding: 20px 0;\n`;\n\nexport const CastItem = styled.li`\nborder: 2px solid black; \npadding: 5px;\nbox-shadow: 0 14px 28px rgba(0, 0, 0, 0.25), 0 10px 10px rgba(0, 0, 0, 0.22);\n`;\n\nexport const Img = styled.img`\n  height: 160px;\n  object-fit: cover;\n  margin-bottom: 8px;\n`;\n\nexport const Name = styled.p`\n  font-size: 14px;\n  font-weight: 500;\n  margin-bottom: 8px;\n  color: ${props => props.theme.colors.primaryDarkText};\n`;\n\nexport const Character = styled.p`\n  font-size: 14px;\n  font-weight: 500;\n  margin-bottom: 8px;\n  width: 200px;\n  color: ${props => props.theme.colors.primaryDarkText};\n`;\n\nexport const NoCast = styled.h2`\n font-size: 24px;\n  font-weight: 700;\n  text-align: center;\n  color: ${props => props.theme.colors.primaryDarkText};\n  text-shadow:\n             1px 10px 5px ${props => props.theme.colors.primaryDarkText},\n             1px 25px 50px ${props => props.theme.colors.primaryDarkText};\n  background-clip: text;\n  -webkit-background-clip: text;\n`; \n","import { useState, useEffect } from \"react\";\nimport { getMovieCast, getSeriesCast } from \"services/api\";\nimport { useParams } from \"react-router-dom\";\nimport { Loader } from \"components/Loader/Loader\";\nimport { CastList, CastItem, Name, Character, NoCast } from \"./MovieCast.styled\";\nimport noPoster from '../../images/no-poster.jpeg';\nimport PropTypes from 'prop-types';\n\nconst Cast = () => {\n    const [cast, setCast] = useState(null);\n    const { movieId, series_id } = useParams(); \n    const [loading, setLoading] = useState(false)\n\n    useEffect(() => {\n        setLoading(true);\n        if (movieId) {\n            getMovieCast(movieId)\n                .then(data => setCast(data))\n                .finally(() => setLoading(false));\n        }\n        else if (series_id) {\n          getSeriesCast(series_id)\n            .then(data => setCast(data))\n          .finally(() => setLoading(false));\n      }\n    }, [movieId, series_id]);\n\n     if (!cast) {\n    return <>{loading && <Loader />}</>;\n  }\n    \n  return cast.length === 0 ? (\n    <NoCast>We don't have any cast for this {movieId ? \"movie\" : \"series\"} â˜¹ </NoCast>\n  ) : (\n      <div>\n      <CastList>\n        {cast.map(({ profile_path, name, character, id }) => (\n          <CastItem key={id}>\n            <img\n                    src={profile_path ? `https://image.tmdb.org/t/p/w200${profile_path}` : noPoster }\n                    alt={name}\n                    width={200}\n                    height={300}\n                    \n              loading=\"lazy\"\n                />\n                <Name>{name}</Name>\n                 <Character>\n                Character: {character ? character : 'No information'}\n                    </Character>\n          </CastItem>\n        ))}\n      </CastList>\n    </div>\n  );\n};\n\nCast.propTypes = {\n  name: PropTypes.string,\n  character: PropTypes.string,\n  profile_path: PropTypes.string,\n  id: PropTypes.string,\n};\n\nexport default Cast;","import axios from \"axios\";\n\nconst API_KEY = 'a672ae57e08bb16567badfa77d9e520f'; \n\nexport async function getMovieById(movieId) {\n    const url = `https://api.themoviedb.org/3/movie/${movieId}?api_key=${API_KEY}&language=en-US`;\n      try {\n    const resp = await axios.get(url);\n    return resp.data;\n  } catch (error) {\n    return;\n  }\n};\n\nexport async function getSeriesById(series_id) {\n    const url = `https://api.themoviedb.org/3/tv/${series_id}?api_key=${API_KEY}&language=en-US`;\n      try {\n    const resp = await axios.get(url);\n    return resp.data;\n  } catch (error) {\n    return;\n  }\n};\n\nexport async function getTrendingAll() {\n  const url = `https://api.themoviedb.org/3/trending/all/day?api_key=${API_KEY}`;\n  try {\n    const resp = await axios.get(url);\n    return resp.data.results;\n  } catch (error) {\n    return;\n  }\n}\n\nexport async function getTrendingMovies() {\n    const url = `https://api.themoviedb.org/3/trending/movie/week?api_key=${API_KEY}`;\n    try {\n        const resp = await axios.get(url);\n        return resp.data.results;\n    } catch (error) {\n        return; \n    }   \n};\n\n\nexport async function getTrendingSeries() {\n  const url = `https://api.themoviedb.org/3/trending/tv/week?api_key=${API_KEY}`;\n    try {\n        const resp = await axios.get(url);\n        return resp.data.results;\n    } catch (error) {\n        return; \n    }   \n};\n\n\nexport async function getMovieCast(movieId) {\n     const url = `https://api.themoviedb.org/3/movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`;\n      try {\n    const resp = await axios.get(url);\n    return resp.data.cast;\n  } catch (error) {\n    return;\n  }\n};\n\nexport async function getSeriesCast(series_id) {\n     const url = `https://api.themoviedb.org/3/tv/${series_id}/credits?api_key=${API_KEY}&language=en-US`;\n      try {\n    const resp = await axios.get(url);\n    return resp.data.cast;\n  } catch (error) {\n    return;\n  }\n};\n\nexport async function getMovieReviews(movieId) {\n  try {\n             const url = `https://api.themoviedb.org/3/movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US`;\n    const resp = await axios.get(url);\n    return resp.data.results;\n  } catch (error) {\n    return;\n  }\n};\n\nexport async function getSeriesReviews(series_id) {\n  try {\n    const url = `https://api.themoviedb.org/3/tv/${series_id}/reviews?api_key=${API_KEY}&language=en-US`;\n    const resp = await axios.get(url);\n    return resp.data.results;\n  } catch (error) {\n    return;\n  }\n}; \n\nexport async function getSearchedMovie(query) {\n  try {\n    const url = `https://api.themoviedb.org/3/search/movie?api_key=${API_KEY}&query=${query}&include_adult=false`;\n    const resp = await axios.get(url);\n    return resp.data.results;\n  } catch (error) {\n    return;\n  }\n}\n\nexport async function getSearchedSeries(query) {\n  try {\n    const url = `https://api.themoviedb.org/3/search/tv?api_key=${API_KEY}&query=${query}&include_adult=false`;\n    const resp = await axios.get(url);\n    return resp.data.results;\n  } catch (error) {\n    return;\n  }\n}; \n\nexport async function getSeriesVideo(series_id) {\n  try {\n    const url = `https://api.themoviedb.org/3/tv/${series_id}/videos?api_key=${API_KEY}&language=en-US`;\n    const resp = await axios.get(url);\n    return resp.data.results;\n  } catch (error) {\n    return;\n  }\n}; \n\nexport async function getMoviesVideo(moviesId) {\n  try {\n    const url = `https://api.themoviedb.org/3/movie/${moviesId}/videos?api_key=${API_KEY}&language=en-US`;\n    const resp = await axios.get(url);\n    return resp.data.results;\n  } catch (error) {\n    return;\n  }\n}; \n\nexport async function getTrendingMoviesByGenre(genre) {\n  try {\n    const url = `https://api.themoviedb.org/3/discover/movie?api_key=${API_KEY}&sort_by=popularity.desc&with_genres=${genre}`;\n    const resp = await axios.get(url); \n    return resp.data.results; \n  } catch (error) {\n    return; \n  }\n}; \n\nexport async function addMovieToWatchList(movieId) {\n  try {\n    const url = `https://api.themoviedb.org/3/movie/${movieId}/account_states?api_key=${API_KEY}`;\n    const resp = await axios.post(url); \n    return resp.data.results; \n  } catch (error) {\n    return; \n  }\n}; \n\nexport async function deleteMovieFromWatchList(movieId) {\n  try {\n    const url = `https://api.themoviedb.org/3/movie/${movieId}/account_states?api_key=${API_KEY}`;\n    const resp = await axios.post(url); \n    return resp.data.results; \n  } catch (error) {\n    return; \n  }\n}; "],"names":["CastList","styled","CastItem","Name","props","theme","colors","primaryDarkText","Character","NoCast","useState","cast","setCast","useParams","movieId","series_id","loading","setLoading","useEffect","getMovieCast","then","data","finally","getSeriesCast","length","map","profile_path","name","character","id","src","noPoster","alt","width","height","Loader","API_KEY","getMovieById","url","axios","resp","getSeriesById","getTrendingAll","results","getTrendingMovies","getTrendingSeries","getMovieReviews","getSeriesReviews","getSearchedMovie","query","getSearchedSeries","getSeriesVideo","getMoviesVideo","moviesId","getTrendingMoviesByGenre","genre"],"sourceRoot":""}