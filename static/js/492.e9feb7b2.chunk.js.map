{"version":3,"file":"static/js/492.e9feb7b2.chunk.js","mappings":"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","sources":["pages/MovieInfo/MovieInfo.jsx"],"sourcesContent":["import { useState, useEffect, Suspense } from \"react\";\nimport { useLocation, useParams, Outlet } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport { AiTwotoneStar, AiFillHeart } from 'react-icons/ai';\nimport { BiTime } from 'react-icons/bi';\n\nimport { getMovieById } from \"services/api\";\nimport { BackLink } from \"components/BackLink/BackLink\";\nimport { Loader } from \"components/Loader/Loader\";\nimport Video from \"components/Videos/Video\";\n\nimport {\n  addMovieToWatchList,\n  addMovieToFavoriteList,\n  removeMovieFromFavoriteList,\n  removeMovieFromWatchList\n} from \"redux/movies/moviesSlice\";\n\nimport {\n    Container,\n    InfoWrapper,\n    MovieDetails,\n    StyledLink,\n    MoreInfoList,\n    MoreInfoItem,\n    ShortInfo,\n    InfoItem,\n    OverView,\n    BottomInfo,\n    BottomTitleInfo,\n    BottomInfoList,\n    Title,\n    AddButton,\n    ButtonsBox,\n    Image\n} from \"./MovieInfo.styled\"; \n\n\nconst MovieInfo = () => {\n  const [movie, setMovie] = useState({});\n  const [loading, setLoading] = useState(false);\n  const location = useLocation();\n  const { movieId } = useParams();\n  const backLinkHref = location.state?.from ?? '/';\n    \n  const dispatch = useDispatch();\n  const watchListMovies = useSelector((state) => state.movies.watchlistMovies);\n  const favoriteMovies = useSelector((state) => state.movies.favoriteMovies);\n\n  useEffect(() => {\n    if (movieId) {\n      setLoading(true);\n      getMovieById(movieId)\n        .then(data => {\n          setMovie(data);\n        })\n        .finally(() => setLoading(false));\n    }\n  }, [movieId]);\n\n  const {\n    id,\n    title,\n    genres = [],\n    poster_path,\n    overview,\n    vote_average = 1,\n    vote_count,\n    runtime,\n    release_date = '',\n  } = movie;\n\n  const genresList = genres.map(genre => genre.name).join(', ');\n  const releaseDate = release_date.split('-').reverse().join('.');\n  const voteAverage = vote_average.toFixed(1);\n\n  const handleAddToWatchList = () => {\n    dispatch(addMovieToWatchList(movie));\n  };\n\n  const handleAddToFavorites = () => {\n    dispatch(addMovieToFavoriteList(movie));\n  };\n\n  const handleRemoveFromWatchList = () => {\n    dispatch(removeMovieFromWatchList({ id }));\n  };\n\n  const handleRemoveFromFavorites = () => {\n    dispatch(removeMovieFromFavoriteList({ id }));\n  };\n\n  const isMovieInWatchlist = watchListMovies.some(movie => movie.id === id);\n  const isMovieInFavorites = favoriteMovies.some(movie => movie.id === id);\n\n  return (\n    <>\n      {loading && <Loader />}\n      <Container>\n        <BackLink to={backLinkHref}>Back to movies</BackLink>\n        <InfoWrapper>\n          <div>\n            <Image\n              src={poster_path && `https://image.tmdb.org/t/p/w300${poster_path}`}\n              alt={title}\n              loading=\"lazy\"\n            />\n          </div>\n\n          <MovieDetails>\n            <Title> {title}</Title>\n            <ShortInfo>\n              <AiTwotoneStar fill='orange' />\n              <InfoItem> {voteAverage}</InfoItem>\n              <AiFillHeart fill=\"red\" />\n              <InfoItem> {vote_count}</InfoItem>\n              <BiTime fill='green' />\n              <InfoItem>{runtime} min</InfoItem>\n            </ShortInfo>\n            <ButtonsBox>\n              {isMovieInWatchlist ? (\n                <AddButton\n                  type=\"button\"\n                  onClick={handleRemoveFromWatchList}\n                >\n                  Remove from WatchList\n                </AddButton>\n              ) : (\n                <AddButton type=\"button\" onClick={handleAddToWatchList}>\n                  Add to WatchList\n                </AddButton>\n              )}\n              {isMovieInFavorites ? (\n                <AddButton\n                  type=\"button\"\n                  onClick={handleRemoveFromFavorites}\n                >\n                  Remove from Favorites\n                </AddButton>\n              ) : (\n                <AddButton type=\"button\" onClick={handleAddToFavorites}>\n                  Add to Favorites\n                </AddButton>\n              )}\n            </ButtonsBox>\n            <OverView>{overview}</OverView>\n            <BottomInfoList>\n              <BottomInfo>\n                <BottomTitleInfo> Release date: </BottomTitleInfo>\n                <span> {releaseDate}</span>\n              </BottomInfo>\n              <BottomInfo>\n                <BottomTitleInfo> Genres: </BottomTitleInfo>\n                <span> {genresList}</span>\n              </BottomInfo>\n            </BottomInfoList>\n            <MoreInfoList>\n              <MoreInfoItem>\n                <StyledLink\n                  to=\"cast\"\n                  state={{ from: location.state?.from ?? '/' }}\n                >\n                  Cast\n                </StyledLink>\n              </MoreInfoItem>\n              <MoreInfoItem>\n                <StyledLink\n                  to=\"reviews\"\n                  state={{ from: location.state?.from ?? '/' }}\n                >\n                  Reviews\n                </StyledLink>\n              </MoreInfoItem>\n              <MoreInfoItem>\n                <Video />\n              </MoreInfoItem>\n            </MoreInfoList>\n          </MovieDetails>\n        </InfoWrapper>\n        <Suspense fallback={<Loader />}>\n          <Outlet />\n        </Suspense>\n      </Container>\n    </>\n  );\n};\n\nexport default MovieInfo;"],"names":["useState","movie","setMovie","loading","setLoading","location","useLocation","movieId","useParams","backLinkHref","state","from","dispatch","useDispatch","watchListMovies","useSelector","movies","watchlistMovies","favoriteMovies","useEffect","getMovieById","then","data","finally","id","title","genres","poster_path","overview","vote_average","vote_count","runtime","release_date","genresList","map","genre","name","join","releaseDate","split","reverse","voteAverage","toFixed","isMovieInWatchlist","some","isMovieInFavorites","to","src","alt","fill","type","onClick","removeMovieFromWatchList","addMovieToWatchList","removeMovieFromFavoriteList","addMovieToFavoriteList","Suspense","fallback"],"sourceRoot":""}