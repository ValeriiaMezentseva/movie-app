{"version":3,"file":"static/js/634.602a263c.chunk.js","mappings":"uTAGaA,EAAQC,EAAAA,EAAAA,GAAH,sFAET,SAAAC,GAAK,OAAIA,EAAMC,MAAMC,OAAOC,eAAvB,IAIDC,EAAYL,EAAAA,EAAAA,IAAH,+EAMTM,EAAcN,EAAAA,EAAAA,IAAH,2HAOXO,EAAaP,EAAAA,EAAAA,KAAH,0JACEQ,GAQZC,EAAeT,EAAAA,EAAAA,EAAH,6HACd,SAAAC,GAAK,OAAIA,EAAMC,MAAMC,OAAOC,eAAvB,I,mBCoDhB,EAvEkB,WAChB,OAA8BM,EAAAA,EAAAA,WAAS,GAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KACA,GAA4CJ,EAAAA,EAAAA,UAAS,MAArD,eAAOK,EAAP,KAAuBC,EAAvB,KACA,GAAgDN,EAAAA,EAAAA,UAAS,MAAzD,eAAOO,EAAP,KAAyBC,EAAzB,KACMC,GAAiBC,EAAAA,EAAAA,KAAY,SAACC,GAAD,OAAWA,EAAMC,OAAOH,cAAxB,KAEnCI,EAAAA,EAAAA,YAAU,WACRX,GAAW,GACPO,GACFP,GAAW,EAEd,GAAE,CAACO,IAEJ,IAAMK,EAAY,SAACC,EAAQC,GACzBV,EAAkBS,GAClBX,GAAa,GACbI,EAAoBQ,EACrB,EAEKC,EAAa,WACjBX,EAAkB,MAClBF,GAAa,GACbI,EAAoB,KACrB,EAED,OACE,UAACb,EAAD,WACGM,IAAW,SAACiB,EAAA,EAAD,KACZ,SAAC7B,EAAD,wBAC+B,IAA1BoB,EAAeU,QACZ,UAACvB,EAAD,YACI,SAACC,EAAD,KACA,SAACE,EAAD,iEAGV,SAAC,KAAD,UACGU,EAAeW,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,MAAOC,EAAd,EAAcA,KAAMC,EAApB,EAAoBA,YAAaC,EAAjC,EAAiCA,eAAgBC,EAAjD,EAAiDA,aAAcC,EAA/D,EAA+DA,aAA/D,OAClB,SAAC,KAAD,WACE,SAACC,EAAA,EAAD,CACEP,GAAIA,EACJC,MAAOC,GAAQD,EACfO,OAAQL,EACRM,YAAaL,GAAkBC,EAC/BK,YAAaJ,EACbK,QAAS,WACHN,EACFZ,EAAUO,EAAI,SACLI,GACTX,EAAUO,EAAI,SAEjB,KAbcA,EADD,OAoBxB,SAAC,KAAD,IACClB,GAAaE,IACZ,UAAC4B,EAAA,EAAD,CAAOtB,MAAOR,EAAW+B,QAASjB,EAAlC,UACwB,UAArBV,IAAgC,SAAC4B,EAAA,EAAD,CAAgBC,QAAS/B,EAAgBY,WAAYA,IAChE,WAArBV,IAAiC,SAAC8B,EAAA,EAAD,CAAiBC,SAAUjC,EAAgBY,WAAYA,QAG7F,SAAC,EAAAsB,SAAD,CAAUC,UAAU,SAACtB,EAAA,EAAD,IAApB,UACE,SAAC,KAAD,QAIP,C","sources":["pages/Favorites/Favorites.styled.jsx","pages/Favorites/Favorites.jsx"],"sourcesContent":["import styled from \"@emotion/styled\";\nimport favorites from '../../images/favorites.png'\n\nexport const Title = styled.h2`\ntext-align: center;\ncolor: ${props => props.theme.colors.primaryDarkText};\ntext-transform: uppercase;\n`; \n\nexport const Container = styled.div`\nmax-width: 1200px;\nmargin: 0 auto;\npadding: 0 16px;\n`;\n\nexport const NoMoviesBox = styled.div`\n    display: flex;\n  align-items: center;\n  justify-content: center;\n  flex-direction: column;\n`; \n\nexport const NoMovieImg = styled.span`\n background-image: url(${favorites});\n  background-size: contain;\n  opacity: 0.30;\n  border: none; \n  width: 120px;\n  height: 120px; \n`\n\nexport const NoMoviesText = styled.p`\n  color: ${props => props.theme.colors.primaryDarkText};\n  font-size: 18px;\n  font-weight: 500;\n  margin-top: 20px;\n  text-align: center; \n`; ","import { useState, Suspense, useEffect } from 'react';\nimport { useSelector } from 'react-redux';\nimport { Outlet } from 'react-router-dom';\n\nimport { Loader } from 'components/Loader/Loader';\nimport { MovieCard } from 'components/MovieCard/MovieCard';\nimport Modal from 'components/Modal/Modal';\nimport MovieInfoModal from 'components/MovieInfoModal/MovieInfoModal';\nimport SeriesInfoModal from 'components/SeriesInfoModal/SeriesInfoModal';\n\nimport { Container, Title, NoMoviesText, NoMoviesBox, NoMovieImg } from './Favorites.styled';\nimport { List, MovieCardBox } from 'components/MovieList/MovieList.styled';\n\nconst Favorites = () => {\n  const [loading, setLoading] = useState(false);\n  const [modalOpen, setModalOpen] = useState(false);\n  const [selectedItemId, setSelectedItemId] = useState(null);\n  const [selectedItemType, setSelectedItemType] = useState(null);\n  const favoriteMovies = useSelector((state) => state.movies.favoriteMovies);\n\n  useEffect(() => {\n    setLoading(true);\n    if (favoriteMovies) {\n      setLoading(false);\n    }\n  }, [favoriteMovies]);\n\n  const openModal = (itemId, itemType) => {\n    setSelectedItemId(itemId);\n    setModalOpen(true);\n    setSelectedItemType(itemType);\n  };\n\n  const closeModal = () => {\n    setSelectedItemId(null);\n    setModalOpen(false);\n    setSelectedItemType(null);\n  };\n\n  return (\n    <Container>\n      {loading && <Loader />}\n      <Title>Favorites</Title>\n          {favoriteMovies.length === 0 ? ( \n              <NoMoviesBox>\n                  <NoMovieImg/>\n                  <NoMoviesText> You didn't add any movies to your favorites! </NoMoviesText>\n                  </NoMoviesBox>\n      ) : (\n        <List>\n          {favoriteMovies.map(({ id, title, name, poster_path, first_air_date, release_date, vote_average }) => (\n            <MovieCardBox key={id}>\n              <MovieCard\n                id={id}\n                title={name || title}\n                poster={poster_path}\n                releaseDate={first_air_date || release_date}\n                voteAverage={vote_average}\n                onClick={() => {\n                  if (release_date) {\n                    openModal(id, 'movie');\n                  } else if (first_air_date) {\n                    openModal(id, 'series');\n                  }\n                }}\n              />\n            </MovieCardBox>\n          ))}\n        </List>\n      )}\n      <Outlet />\n      {modalOpen && selectedItemId && (\n        <Modal state={modalOpen} stateFn={closeModal}>\n          {selectedItemType === 'movie' && <MovieInfoModal movieId={selectedItemId} closeModal={closeModal} />}\n          {selectedItemType === 'series' && <SeriesInfoModal seriesId={selectedItemId} closeModal={closeModal} />}\n        </Modal>\n      )}\n      <Suspense fallback={<Loader />}>\n        <Outlet />\n      </Suspense>\n    </Container>\n  );\n};\n\nexport default Favorites;"],"names":["Title","styled","props","theme","colors","primaryDarkText","Container","NoMoviesBox","NoMovieImg","favorites","NoMoviesText","useState","loading","setLoading","modalOpen","setModalOpen","selectedItemId","setSelectedItemId","selectedItemType","setSelectedItemType","favoriteMovies","useSelector","state","movies","useEffect","openModal","itemId","itemType","closeModal","Loader","length","map","id","title","name","poster_path","first_air_date","release_date","vote_average","MovieCard","poster","releaseDate","voteAverage","onClick","Modal","stateFn","MovieInfoModal","movieId","SeriesInfoModal","seriesId","Suspense","fallback"],"sourceRoot":""}