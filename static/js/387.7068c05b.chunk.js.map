{"version":3,"file":"static/js/387.7068c05b.chunk.js","mappings":"yMASaA,GAPqBC,EAAAA,EAAAA,IAAH,sGAOTA,EAAAA,EAAAA,IAAH,4HASNC,EAAOD,EAAAA,EAAAA,IAAH,oFAGN,SAAAE,GAAK,OAAIA,EAAMC,MAAMC,OAAOC,eAAvB,IAGHC,EAAQN,EAAAA,EAAAA,GAAH,8HAKP,SAAAE,GAAK,OAAIA,EAAMC,MAAMC,OAAOC,eAAvB,IAGHE,EAAYP,EAAAA,EAAAA,EAAH,iIAKX,SAAAE,GAAK,OAAIA,EAAMC,MAAMC,OAAOC,eAAvB,IAGHG,EAASR,EAAAA,EAAAA,KAAH,sIAIR,SAAAE,GAAK,OAAIA,EAAMC,MAAMC,OAAOC,eAAvB,I,mBCrCHI,EAAY,SAAC,GAAkE,EAAhEC,GAAiE,IAA7DC,EAA4D,EAA5DA,MAAOC,EAAqD,EAArDA,OAAQC,EAA6C,EAA7CA,YAA6C,IAAhCC,YAAAA,OAAgC,MAAlB,EAAkB,EAAfC,EAAe,EAAfA,QAEzE,OACI,iBAAKA,QAASA,EAAd,WAEQ,SAAChB,EAAD,CACIiB,IAAKJ,EAAM,0CAAsCA,GAAWK,EAC5DC,IAAKP,EACTQ,QAAQ,UACZ,UAAClB,EAAD,YACI,SAACK,EAAD,UAAQK,KACR,UAACJ,EAAD,WACMM,EAAc,IAAIO,KAAKP,GAAaQ,cAAgB,kBACtD,SAACb,EAAD,UAASM,EAAYQ,QAAQ,aAMhD,C,oHCxBYC,EAAmBvB,EAAAA,EAAAA,IAAH,iRAehBwB,EAAaxB,EAAAA,EAAAA,KAAH,+bAKD,SAAAE,GAAK,OAAIA,EAAMC,MAAMC,OAAOqB,iBAAvB,IAcdC,EAAQ1B,EAAAA,EAAAA,MAAH,6VAUP,SAAAE,GAAK,OAAIA,EAAMC,MAAMC,OAAOC,eAAvB,IAUHsB,EAAe3B,EAAAA,EAAAA,OAAH,uXAMd,SAAAE,GAAK,OAAIA,EAAMC,MAAMC,OAAOC,eAAvB,I,SCtDHuB,EAAe,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SACpC,GAAwCC,EAAAA,EAAAA,WAAS,GAAjD,eAAOC,EAAP,KAAqBC,EAArB,KAgBA,OACE,SAACV,EAAD,WACE,UAACC,EAAD,CAAYM,SAPK,SAACI,GACpBA,EAAEC,iBACFL,EAASD,EACV,EAIG,WACIG,IACA,SAACL,EAAD,CAAcS,KAAK,SAASrB,QAlBf,WACnBkB,GAAiBD,EAClB,EAgBO,UACE,SAAC,MAAD,MAGHA,IACC,iCACE,SAACN,EAAD,CACEU,KAAK,OACLC,KAAK,QACLR,MAAOA,EACPS,YAAY,6BACZC,SAAU,SAACL,GAAD,OAAOJ,EAASI,EAAEM,OAAOX,MAAzB,KAEZ,SAACF,EAAD,CAAcS,KAAK,SAAnB,UACE,SAAC,MAAD,OAEF,SAACT,EAAD,CAAcS,KAAK,SAASrB,QA9BZ,WACxBkB,GAAgB,GAChBH,EAAS,GACV,EA2BS,UACE,SAAC,MAAD,CAAKW,KAAM,cAOxB,C,mKClDYC,GAAO1C,EAAAA,EAAAA,GAAO2C,EAAAA,GAAP3C,CAAH,wKAIR,SAAAE,GAAK,OAAIA,EAAMC,MAAMC,OAAOC,eAAvB,IAID,SAAAH,GAAK,OAAIA,EAAMC,MAAMC,OAAOwC,gBAAvB,IACM,SAAA1C,GAAK,OAAIA,EAAMC,MAAMC,OAAOyC,QAAvB,IAKhBC,EAAO9C,EAAAA,EAAAA,GAAH,koBA6BJ+C,EAAgB/C,EAAAA,EAAAA,GAAH,qe,kBCA1B,EAtCmB,SAAC,GAAoB,IAAlBgD,EAAiB,EAAjBA,WACZC,GAAWC,EAAAA,EAAAA,MACXC,EAAgC,MAAtBF,EAASG,SAAmB,WAAa,GAKzD,OACQ,SAACN,EAAD,UACKE,EAAWK,KAAI,gBAAG3C,EAAH,EAAGA,GAAI2B,EAAP,EAAOA,KAAMiB,EAAb,EAAaA,YAAaC,EAA1B,EAA0BA,eAAgBC,EAA1C,EAA0CA,aAA1C,OACf,SAACT,EAAD,WACG,SAACL,EAAD,CAAMe,GAAE,UAAKN,GAAL,OAAezC,GAAMgD,MAAO,CAAEC,KAAMV,GAA5C,UACI,SAACxC,EAAA,EAAD,CACIC,GAAIA,EACJC,MAAO0B,EACPzB,OAAQ0C,EACRzC,YAAa0C,EACbzC,YAAa0C,OAPJ9C,EADL,KAiB/B,E,oBChCYJ,EAAQN,EAAAA,EAAAA,GAAH,ucAMP,SAAAE,GAAK,OAAIA,EAAMC,MAAMC,OAAOC,eAAvB,IAYP,SAAAH,GAAK,OAAIA,EAAMC,MAAMC,OAAOC,eAAvB,IAODuD,EAAY5D,EAAAA,EAAAA,KAAH,2DAKT2B,EAAe3B,EAAAA,EAAAA,IAAH,6KC4CzB,EA/De,WAAO,IAAD,EACjB,GAAwC+B,EAAAA,EAAAA,UAAS,IAAjD,eAAO8B,EAAP,KAAqBC,EAArB,KACA,GAA4C/B,EAAAA,EAAAA,UAAS,IAArD,eAAOgC,EAAP,KAAuBC,EAAvB,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACA,GAA8BpC,EAAAA,EAAAA,WAAS,GAAvC,eAAOZ,EAAP,KAAgBiD,EAAhB,KACMC,EAAK,UAAGH,EAAaI,IAAI,gBAApB,QAAgC,IAE3CC,EAAAA,EAAAA,YAAU,WACNH,GAAW,GACPC,GACAG,EAAAA,EAAAA,IAAkBH,GACbI,MAAK,SAAAC,GACkB,IAAhBA,EAAKC,QACLC,EAAAA,GAAAA,MAAY,mDAEhBd,EAAgBY,GAChBN,GAAW,EACd,IACAS,OAAM,SAAAC,GACHF,EAAAA,GAAAA,MAAY,mDACZR,GAAW,EACd,KAELW,EAAAA,EAAAA,MACKN,MAAK,SAAAC,GACFV,EAAkBU,GAClBN,GAAW,EACd,IACAS,OAAM,SAAAC,GACHF,EAAAA,GAAAA,MAAY,mDACZR,GAAW,EACd,GAGZ,GAAE,CAACC,IAOJ,OACI,iCACI,UAACT,EAAD,WACKzC,IAAW,SAAC6D,EAAA,EAAD,KACZ,SAACrD,EAAD,WACI,SAAC,IAAD,CAAcE,MAAOwC,EAAOvC,SAAU,SAAAmD,GAAC,OAVnC,SAAAZ,GAEhBF,EAD6B,KAAVE,EAAe,CAAEA,MAAAA,GAAU,CAAC,EAElD,CAO0Da,CAAYD,EAAhB,OAE3C,SAAC3E,EAAD,UAAQ+D,EAAQ,iBAAmB,sBAClCA,GACG,SAAC,EAAD,CAAYrB,WAAYa,KAExB,SAAC,EAAD,CAAYb,WAAYe,KAE5B,SAAC,EAAAoB,SAAD,CAAUC,UAAU,SAACJ,EAAA,EAAD,IAApB,UACI,SAAC,KAAD,UAGP,SAAC,KAAD,MAGZ,C,mYCxEKK,EAAU,mCAET,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA4BC,GAA5B,gFACGC,EADH,6CAC+CD,EAD/C,oBACkEF,EADlE,qCAGgBI,EAAAA,EAAAA,IAAUD,GAH1B,cAGGE,EAHH,yBAIIA,EAAKhB,MAJT,0IAUA,SAAeiB,EAAtB,+CAAO,OAAP,oBAAO,WAA6BC,GAA7B,gFACGJ,EADH,0CAC4CI,EAD5C,oBACiEP,EADjE,qCAGgBI,EAAAA,EAAAA,IAAUD,GAH1B,cAGGE,EAHH,yBAIIA,EAAKhB,MAJT,0IAoBA,SAAemB,IAAtB,4CAAO,OAAP,oBAAO,6FACGL,EADH,mEACqEH,GADrE,kBAGoBI,EAAAA,EAAAA,IAAUD,GAH9B,cAGOE,EAHP,yBAIQA,EAAKhB,KAAKoB,SAJlB,0IAWA,SAAef,IAAtB,4CAAO,OAAP,oBAAO,6FACCS,EADD,gEACgEH,GADhE,kBAGoBI,EAAAA,EAAAA,IAAUD,GAH9B,cAGOE,EAHP,yBAIQA,EAAKhB,KAAKoB,SAJlB,0IAWA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA4BR,GAA5B,gFACIC,EADJ,6CACgDD,EADhD,4BAC2EF,EAD3E,qCAGgBI,EAAAA,EAAAA,IAAUD,GAH1B,cAGGE,EAHH,yBAIIA,EAAKhB,KAAKsB,MAJd,0IAUA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA6BL,GAA7B,gFACIJ,EADJ,0CAC6CI,EAD7C,4BAC0EP,EAD1E,qCAGgBI,EAAAA,EAAAA,IAAUD,GAH1B,cAGGE,EAHH,yBAIIA,EAAKhB,KAAKsB,MAJd,0IAUA,SAAeE,EAAtB,+CAAO,OAAP,oBAAO,WAA+BX,GAA/B,yFAEYC,EAFZ,6CAEwDD,EAFxD,4BAEmFF,EAFnF,4BAGgBI,EAAAA,EAAAA,IAAUD,GAH1B,cAGGE,EAHH,yBAIIA,EAAKhB,KAAKoB,SAJd,0IAUA,SAAeK,EAAtB,+CAAO,OAAP,oBAAO,WAAgCP,GAAhC,yFAEGJ,EAFH,0CAE4CI,EAF5C,4BAEyEP,EAFzE,4BAGgBI,EAAAA,EAAAA,IAAUD,GAH1B,cAGGE,EAHH,yBAIIA,EAAKhB,KAAKoB,SAJd,0IAUA,SAAeM,EAAtB,+CAAO,OAAP,oBAAO,WAAgC/B,GAAhC,yFAEGmB,EAFH,4DAE8DH,EAF9D,kBAE+EhB,EAF/E,iCAGgBoB,EAAAA,EAAAA,IAAUD,GAH1B,cAGGE,EAHH,yBAIIA,EAAKhB,KAAKoB,SAJd,0IAUA,SAAetB,EAAtB,+CAAO,OAAP,oBAAO,WAAiCH,GAAjC,yFAEGmB,EAFH,yDAE2DH,EAF3D,kBAE4EhB,EAF5E,iCAGgBoB,EAAAA,EAAAA,IAAUD,GAH1B,cAGGE,EAHH,yBAIIA,EAAKhB,KAAKoB,SAJd,0IAUA,SAAeO,EAAtB,+CAAO,OAAP,oBAAO,WAA8BT,GAA9B,yFAEGJ,EAFH,0CAE4CI,EAF5C,2BAEwEP,EAFxE,4BAGgBI,EAAAA,EAAAA,IAAUD,GAH1B,cAGGE,EAHH,yBAIIA,EAAKhB,KAAKoB,SAJd,0IAUA,SAAeQ,EAAtB,+CAAO,OAAP,oBAAO,WAA8BC,GAA9B,yFAEGf,EAFH,6CAE+Ce,EAF/C,2BAE0ElB,EAF1E,4BAGgBI,EAAAA,EAAAA,IAAUD,GAH1B,cAGGE,EAHH,yBAIIA,EAAKhB,KAAKoB,SAJd,0IAUA,SAAeU,EAAtB,+CAAO,OAAP,oBAAO,WAAwCC,GAAxC,yFAEGjB,EAFH,8DAEgEH,EAFhE,gDAE+GoB,GAF/G,SAGgBhB,EAAAA,EAAAA,IAAUD,GAH1B,cAGGE,EAHH,yBAIIA,EAAKhB,KAAKoB,SAJd,0I","sources":["components/MovieCard/MovieCard.styled.jsx","components/MovieCard/MovieCard.jsx","components/SearchedMovies/SearchedMovies.styled.jsx","components/SearchedMovies/SearchedMovies.jsx","components/SeriesList/SeriesList.styled.jsx","components/SeriesList/SeriesList.jsx","pages/Series/Series.styled.jsx","pages/Series/Series.jsx","services/api.js"],"sourcesContent":["import styled from \"@emotion/styled\";\n\nexport const MovieCardContainer = styled.div`\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const Poster = styled.img`\n  flex: 1;\n  object-fit: cover;\n  border-top-left-radius: 6px;\n  border-top-right-radius: 6px;\n`;\n\n\n\nexport const Info = styled.div`\n  padding-top: 12px;\n  padding-left: 12px;\n  color: ${props => props.theme.colors.primaryDarkText};\n`;\n\nexport const Title = styled.h2`\n  text-decoration: none;\n  margin: 0;\n  font-size: 16px;\n  letter-spacing: 0.04em;\n  color: ${props => props.theme.colors.primaryDarkText};\n`;\n\nexport const MovieInfo = styled.p`\n  font-size: 12px;\n  font-weight: 500;\n  line-height: 14px;\n  letter-spacing: 0.04em;\n  color: ${props => props.theme.colors.primaryDarkText};\n`;\n\nexport const Rating = styled.span`\n  margin-left: 10px;\n  background-color: orange;\n  padding: 3px 8px;\n  color: ${props => props.theme.colors.primaryDarkText};\n  border-radius: 5px;\n`;","import PropTypes from 'prop-types';\n\nimport { Poster, Info, Title, MovieInfo, Rating, } from './MovieCard.styled';\nimport noPoster from '../../images/no-poster.jpeg';\n\n\n\nexport const MovieCard = ({ id, title, poster, releaseDate, voteAverage = 1, onClick, }) => {\n    \n    return (\n        <div onClick={onClick} >\n           \n                <Poster\n                    src={poster ? `https://image.tmdb.org/t/p/w300/${poster}` : noPoster}\n                    alt={title}\n                loading=\"lazy\" />\n            <Info>\n                <Title>{title}</Title>\n                <MovieInfo>\n                    { releaseDate ? new Date(releaseDate).getFullYear() : 'No information'}\n                    <Rating>{voteAverage.toFixed(1)}</Rating>\n                </MovieInfo>\n            </Info>\n        </div>\n    )\n\n};\n\nMovieCard.propTypes = {\n    id: PropTypes.number.isRequired,\n    title: PropTypes.string,\n    poster: PropTypes.string, \n    releaseDate: PropTypes.string, \n    voteAverage: PropTypes.number,\n}\n\n\n\n","import styled from \"@emotion/styled\";\n\nexport const SearchMoviesForm = styled.div`\n  top: 0;\n  left: 0;\n  position: sticky;\n  z-index: 1100;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  min-height: 64px;\n  padding-right: 24px;\n  padding-left: 24px;\n  padding-top: 12px;\n  padding-bottom: 12px;\n  `;\n    \nexport const StyledForm = styled.form`\n  display: flex;\n  align-items: center;\n  width: 100%;\n  max-width: 600px;\n  background-color: ${props => props.theme.colors.tertiaryLightText};\n  border-radius: 50px;\n  overflow: hidden;\n  padding: 5px;\n  box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2),\n    0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12);\n    \n    :hover {\n    box-shadow: 2px 2px 3px 0px rgba(189, 0, 0, 0.5);\n   \n    transition: box-shadow 0.3s ease;\n\n}\n`;\nexport const Input = styled.input`\ndisplay: inline-block;\n  width: 100%;\n  margin-left: 7px; \n  font: inherit;\n  font-size: 20px;\n  border: none;\n  outline: none;\n  padding-left: 4px;\n  padding-right: 4px;\n  color: ${props => props.theme.colors.primaryDarkText};\n  background-color: transparent;\n  ::placeholder {\n  font: inherit;\n  font-size: 18px;\n  background-color: transparent;\n\n}\n`;\n\nexport const SearchButton = styled.button`\ndisplay: inline-block;\n  width: 48px;\n  height: 48px;\n  border: 0;\n  opacity: 0.7;\n  color: ${props => props.theme.colors.primaryDarkText};\n  background-color: transparent;\n  transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  cursor: pointer;\n  outline: none;\n  :hover {\n  opacity: 1;\n  color: #bd0000;\n    transform: scale(1.1);\n    transition: transform 0.3s ease;\n\n}\n`;\n// export const LabelBtn = styled.span`\n// position: absolute;\n//   width: 1px;\n//   height: 1px;\n//   padding: 0;\n//   overflow: hidden;\n//   clip: rect(0, 0, 0, 0);\n//   white-space: nowrap;\n//   clip-path: inset(50%);\n//   border: 0;\n// `;","import { useState } from \"react\";\nimport PropTypes from 'prop-types';\n\n// import { GrClose } from 'react-icons/gr';\nimport { GoSearch, GoX } from 'react-icons/go';\n\nimport { SearchMoviesForm, StyledForm, SearchButton, Input } from \"./SearchedMovies.styled\";\n\nexport const SearchMovies = ({ value, onSubmit }) => {\n  const [isSearchOpen, setIsSearchOpen] = useState(false);\n\n  const toggleSearch = () => {\n    setIsSearchOpen(!isSearchOpen);\n  };\n\n  const handleCloseSearch = () => {\n    setIsSearchOpen(false);\n    onSubmit('');\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    onSubmit(value);\n  };\n\n  return (\n    <SearchMoviesForm>\n      <StyledForm onSubmit={handleSubmit}>\n        {!isSearchOpen && (\n          <SearchButton type=\"button\" onClick={toggleSearch}>\n            <GoSearch />\n          </SearchButton>\n        )}\n        {isSearchOpen && (\n          <>\n            <Input\n              type=\"text\"\n              name=\"query\"\n              value={value}\n              placeholder=\"What do you want to watch?\"\n              onChange={(e) => onSubmit(e.target.value)}\n            />\n            <SearchButton type=\"submit\">\n              <GoSearch />\n            </SearchButton>\n            <SearchButton type=\"button\" onClick={handleCloseSearch}>\n              <GoX size={17}/>\n            </SearchButton>\n          </>\n        )}\n      </StyledForm>\n    </SearchMoviesForm>\n  );\n};\n\nSearchMovies.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n  value: PropTypes.string.isRequired,\n};","import styled from \"@emotion/styled\";\nimport { NavLink } from \"react-router-dom\";\n\nexport const Link = styled(NavLink)`\n\nalign-items: center;\ntext-decoration: none;\ncolor: ${props => props.theme.colors.primaryDarkText};\nfont-weight: 500;\n\n&.active {\n    color: ${props => props.theme.colors.primaryLightText};\n    background-color: ${props => props.theme.colors.redColor};\n  }\n`;\n\n\nexport const List = styled.ul`\n  margin-left: auto;\n  margin-right: auto;\n  margin-bottom: 40px;\n  display: grid;\n  max-width: 280px;\n  justify-content: center;\n  grid-gap: 20px;\n  grid-auto-rows: auto; \n  padding-left: 0; \n\n    @media screen and (min-width: 640px) {\n       margin-bottom: 60px;\n    max-width: 700px;\n    grid-template-columns: repeat(2, 1fr);\n    grid-gap: 32px;\n  }\n\n        @media screen and (min-width: 940px) {\n       grid-template-columns: repeat(3, 1fr);\n    grid-gap: 32px 16px;\n    max-width: 1200px;\n  }\n\n    @media screen and (min-width: 1280px) {\n    grid-template-columns: repeat(4, 2fr);\n  }\n`;\n\nexport const SeriesCardBox = styled.li`\n  display: flex;\n  flex-direction: column;\n  width: 300px;\n  border-radius: 6px;\n  cursor: pointer; \n  box-shadow: rgba(50, 50, 93, 0.25) 0px 2px 5px -1px,\n    rgba(0, 0, 0, 0.3) 0px 1px 3px -1px;\n  transition: transform 400ms cubic-bezier(0.4, 0, 0.2, 1),\n    box-shadow 600ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  &:hover,\n  &:focus {\n    transform: scale(1.05);\n    box-shadow: 0 14px 28px rgba(0, 0, 0, 0.25), 0 10px 10px rgba(0, 0, 0, 0.22);\n  }\n`","\nimport { useLocation } from \"react-router-dom\";\nimport { Link, List, SeriesCardBox } from \"./SeriesList.styled\";\nimport { MovieCard } from \"components/MovieCard/MovieCard\";\nimport PropTypes from 'prop-types'\n\n\n\nconst SeriesList = ({ collection }) => {\n    const location = useLocation();\n    const prevUrl = location.pathname === '/' ? '/series/' : '';\n\n\n\n    \n    return (\n            <List>\n                {collection.map(({ id, name, poster_path, first_air_date, vote_average }) =>\n                (<SeriesCardBox key={id}>\n                    <Link to={`${prevUrl}${id}`} state={{ from: location }}>\n                        <MovieCard\n                            id={id}\n                            title={name}\n                            poster={poster_path}\n                            releaseDate={first_air_date}\n                            voteAverage={vote_average}\n\n                        />\n                    </Link>\n                </SeriesCardBox>\n                ))}\n            </List>\n    )\n    \n}; \n\nSeriesList.propTypes = { \n   collection: PropTypes.arrayOf(PropTypes.shape({\n       id: PropTypes.number.isRequired,\n       name: PropTypes.string.isRequired, \n       poster: PropTypes.string, \n       releaseDate: PropTypes.string, \n       voteAverage: PropTypes.number, \n    })),\n}\n\nexport default SeriesList;","import styled from \"@emotion/styled\";\n\nexport const Title = styled.h1`\n  font-size:20px; \n  font-weight:700;  \n  letter-spacing:1px; \n  text-transform:uppercase; \n  text-align:center; \n  color: ${props => props.theme.colors.primaryDarkText};\n  \n   padding-bottom:13px;\n\ntext-shadow: 2px 7px 5px rgba(0,0,0,0.3), \n    0px -4px 10px rgba(255,255,255,0.3);\n\n   @media screen and (min-width: 480px){\n     font-size:26px; \n\n  }\nmargin-top: 60px; \ncolor: ${props => props.theme.colors.primaryDarkText};\n     @media screen and (min-width: 768px){\n  margin-top: 40px; \n\n  }\n`; \n\nexport const Container = styled.main`\nmargin: 0 auto;\npadding: 0 16px;\n`;\n\nexport const SearchButton = styled.div`\n  position: absolute;\n  top: 88px;\n  right: 10px; \n  margin-top: 10px; \n  \n     @media screen and (min-width: 1079px){\n   right: 70px;\n\n  }\n`;","import { Outlet, useSearchParams } from 'react-router-dom';\nimport toast, { Toaster } from 'react-hot-toast';\nimport { useState, useEffect, Suspense } from \"react\";\n\nimport {getTrendingSeries, getSearchedSeries } from \"services/api\";\n\nimport SeriesList from 'components/SeriesList/SeriesList';\nimport { SearchMovies }  from 'components/SearchedMovies/SearchedMovies';\nimport { Loader } from 'components/Loader/Loader';\n\nimport { Container, Title, SearchButton} from './Series.styled';\n\n\nconst Series = () => {\n    const [searchSeries, setSearchSeries] = useState([]);\n    const [trendingSeries, setTrendingSeries] = useState([]);\n    const [searchParams, setSearchParams] = useSearchParams();\n    const [loading, setLoading] = useState(false);\n    const query = searchParams.get('query') ?? '';\n\n    useEffect(() => {\n        setLoading(true);\n        if (query) {\n            getSearchedSeries(query)\n                .then(data => {\n                    if (data.length === 0) {\n                        toast.error(\"Sorry, we couldnt find anything on your request\")\n                    }\n                    setSearchSeries(data);\n                    setLoading(false);\n                })\n                .catch(error => {\n                    toast.error(\"An error occured while fetching searched movies\");\n                    setLoading(false)\n                })\n        } else {\n            getTrendingSeries()\n                .then(data => {\n                    setTrendingSeries(data)\n                    setLoading(false);\n                })\n                .catch(error => {\n                    toast.error(\"An error occured while fetching searched movies\");\n                    setLoading(false)\n                })\n        }\n\n    }, [query]);\n\n    const updateQuery = query => {\n        const nextParams = query !== '' ? { query } : {};\n        setSearchParams(nextParams);\n    };\n\n    return (\n        <>\n            <Container>\n                {loading && <Loader />}\n                <SearchButton>\n                    <SearchMovies value={query} onSubmit={q => updateQuery(q)} />\n                    </SearchButton>\n                <Title>{query ? 'Search Results' : 'Popular this week'}</Title>\n                {query ? (\n                    <SeriesList collection={searchSeries} />\n                ) : (\n                    <SeriesList collection={trendingSeries} />\n                )}\n                <Suspense fallback={<Loader />}>\n                    <Outlet />\n                </Suspense>\n            </Container>\n             <Toaster />\n        </>\n    );\n}; \n\nexport default Series;","import axios from \"axios\";\n\nconst API_KEY = 'a672ae57e08bb16567badfa77d9e520f'; \n\nexport async function getMovieById(movieId) {\n    const url = `https://api.themoviedb.org/3/movie/${movieId}?api_key=${API_KEY}&language=en-US`;\n      try {\n    const resp = await axios.get(url);\n    return resp.data;\n  } catch (error) {\n    return;\n  }\n};\n\nexport async function getSeriesById(series_id) {\n    const url = `https://api.themoviedb.org/3/tv/${series_id}?api_key=${API_KEY}&language=en-US`;\n      try {\n    const resp = await axios.get(url);\n    return resp.data;\n  } catch (error) {\n    return;\n  }\n};\n\nexport async function getTrendingAll() {\n  const url = `https://api.themoviedb.org/3/trending/all/day?api_key=${API_KEY}`;\n  try {\n    const resp = await axios.get(url);\n    return resp.data.results;\n  } catch (error) {\n    return;\n  }\n}\n\nexport async function getTrendingMovies() {\n    const url = `https://api.themoviedb.org/3/trending/movie/week?api_key=${API_KEY}`;\n    try {\n        const resp = await axios.get(url);\n        return resp.data.results;\n    } catch (error) {\n        return; \n    }   \n};\n\n\nexport async function getTrendingSeries() {\n  const url = `https://api.themoviedb.org/3/trending/tv/week?api_key=${API_KEY}`;\n    try {\n        const resp = await axios.get(url);\n        return resp.data.results;\n    } catch (error) {\n        return; \n    }   \n};\n\n\nexport async function getMovieCast(movieId) {\n     const url = `https://api.themoviedb.org/3/movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`;\n      try {\n    const resp = await axios.get(url);\n    return resp.data.cast;\n  } catch (error) {\n    return;\n  }\n};\n\nexport async function getSeriesCast(series_id) {\n     const url = `https://api.themoviedb.org/3/tv/${series_id}/credits?api_key=${API_KEY}&language=en-US`;\n      try {\n    const resp = await axios.get(url);\n    return resp.data.cast;\n  } catch (error) {\n    return;\n  }\n};\n\nexport async function getMovieReviews(movieId) {\n  try {\n             const url = `https://api.themoviedb.org/3/movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US`;\n    const resp = await axios.get(url);\n    return resp.data.results;\n  } catch (error) {\n    return;\n  }\n};\n\nexport async function getSeriesReviews(series_id) {\n  try {\n    const url = `https://api.themoviedb.org/3/tv/${series_id}/reviews?api_key=${API_KEY}&language=en-US`;\n    const resp = await axios.get(url);\n    return resp.data.results;\n  } catch (error) {\n    return;\n  }\n}; \n\nexport async function getSearchedMovie(query) {\n  try {\n    const url = `https://api.themoviedb.org/3/search/movie?api_key=${API_KEY}&query=${query}&include_adult=false`;\n    const resp = await axios.get(url);\n    return resp.data.results;\n  } catch (error) {\n    return;\n  }\n}\n\nexport async function getSearchedSeries(query) {\n  try {\n    const url = `https://api.themoviedb.org/3/search/tv?api_key=${API_KEY}&query=${query}&include_adult=false`;\n    const resp = await axios.get(url);\n    return resp.data.results;\n  } catch (error) {\n    return;\n  }\n}; \n\nexport async function getSeriesVideo(series_id) {\n  try {\n    const url = `https://api.themoviedb.org/3/tv/${series_id}/videos?api_key=${API_KEY}&language=en-US`;\n    const resp = await axios.get(url);\n    return resp.data.results;\n  } catch (error) {\n    return;\n  }\n}; \n\nexport async function getMoviesVideo(moviesId) {\n  try {\n    const url = `https://api.themoviedb.org/3/movie/${moviesId}/videos?api_key=${API_KEY}&language=en-US`;\n    const resp = await axios.get(url);\n    return resp.data.results;\n  } catch (error) {\n    return;\n  }\n}; \n\nexport async function getTrendingMoviesByGenre(genre) {\n  try {\n    const url = `https://api.themoviedb.org/3/discover/movie?api_key=${API_KEY}&sort_by=popularity.desc&with_genres=${genre}`;\n    const resp = await axios.get(url); \n    return resp.data.results; \n  } catch (error) {\n    return; \n  }\n}; \n\nexport async function addMovieToWatchList(movieId) {\n  try {\n    const url = `https://api.themoviedb.org/3/movie/${movieId}/account_states?api_key=${API_KEY}`;\n    const resp = await axios.post(url); \n    return resp.data.results; \n  } catch (error) {\n    return; \n  }\n}; \n\nexport async function deleteMovieFromWatchList(movieId) {\n  try {\n    const url = `https://api.themoviedb.org/3/movie/${movieId}/account_states?api_key=${API_KEY}`;\n    const resp = await axios.post(url); \n    return resp.data.results; \n  } catch (error) {\n    return; \n  }\n}; "],"names":["Poster","styled","Info","props","theme","colors","primaryDarkText","Title","MovieInfo","Rating","MovieCard","id","title","poster","releaseDate","voteAverage","onClick","src","noPoster","alt","loading","Date","getFullYear","toFixed","SearchMoviesForm","StyledForm","tertiaryLightText","Input","SearchButton","SearchMovies","value","onSubmit","useState","isSearchOpen","setIsSearchOpen","e","preventDefault","type","name","placeholder","onChange","target","size","Link","NavLink","primaryLightText","redColor","List","SeriesCardBox","collection","location","useLocation","prevUrl","pathname","map","poster_path","first_air_date","vote_average","to","state","from","Container","searchSeries","setSearchSeries","trendingSeries","setTrendingSeries","useSearchParams","searchParams","setSearchParams","setLoading","query","get","useEffect","getSearchedSeries","then","data","length","toast","catch","error","getTrendingSeries","Loader","q","updateQuery","Suspense","fallback","API_KEY","getMovieById","movieId","url","axios","resp","getSeriesById","series_id","getTrendingMovies","results","getMovieCast","cast","getSeriesCast","getMovieReviews","getSeriesReviews","getSearchedMovie","getSeriesVideo","getMoviesVideo","moviesId","getTrendingMoviesByGenre","genre"],"sourceRoot":""}